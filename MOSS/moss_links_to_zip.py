#!/usr/bin/env python3
'''
Given a "MOSS linkage" JSON (e.g. generated by moss_connectivity.py), output a zip file of the reports
Niema Moshiri 2019
'''
from json import load
from urllib.request import urlopen
from zipfile import ZipFile,ZIP_DEFLATED

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('-i', '--input', required=False, type=str, default='stdin', help="MOSS Linkage File (JSON)")
    parser.add_argument('-o', '--output', required=True, type=str, help="Output File (zip)")
    args = parser.parse_args()
    if args.input == 'stdin':
        from sys import stdin as infile
    else:
        infile = open(args.input)
    if not args.output.lower().endswith('.zip'):
        raise ValueError("Output file must be zip")

    # download MOSS match reports
    links = load(infile)
    emails = sorted(links.keys())
    outzip = ZipFile(args.output, mode='w', compression=ZIP_DEFLATED)
    num_pairs = int(len(emails)*(len(emails)-1)/2); pair_num = 1
    for i in range(len(emails)-1):
        for j in range(i+1, len(emails)):
            if emails[j] in links[emails[i]]:
                folder = "%s,%s" % (emails[i], emails[j])
                for url in links[emails[i]][emails[j]]:
                    url_base = '/'.join(url.split('/')[:-1])
                    main_html = urlopen(url).read().decode()
                    top_url = '%s/%s' % (url_base, main_html.split('<FRAME SRC=')[1].split(' ')[0].replace('"',''))
                    left_url = '%s/%s' % (url_base, main_html.split('<FRAME SRC=')[2].split(' ')[0].replace('"',''))
                    right_url = '%s/%s' % (url_base, main_html.split('<FRAME SRC=')[3].split(' ')[0].replace('"',''))
                    folder = "%s,%s/%s" % (emails[i], emails[j], url.split('/')[-2])
                    top_html = urlopen(top_url).read().decode()
                    left_html = urlopen(left_url).read().decode()
                    right_html = urlopen(right_url).read().decode()
                    outzip.writestr("%s/%s" % (folder, url.split('/')[-1]), main_html)
                    outzip.writestr("%s/%s" % (folder, top_url.split('/')[-1]), top_html)
                    outzip.writestr("%s/%s" % (folder, left_url.split('/')[-1]), left_html)
                    outzip.writestr("%s/%s" % (folder, right_url.split('/')[-1]), right_html)
            print("Successfully downloaded student pair %d of %d" % (pair_num, num_pairs), end='\r'); pair_num += 1
    print("Successfully downloaded %d student pairs" % num_pairs)
