#!/usr/bin/env python3
'''
Given a "MOSS linkage" JSON (e.g. generated by moss_connectivity.py), output a TSV of (email1, email2, num_links)
Niema Moshiri 2019
'''
from json import load

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('-i', '--input', required=False, type=str, default='stdin', help="MOSS Linkage File (JSON)")
    parser.add_argument('-o', '--output', required=False, type=str, default='stdout', help="Output File (TSV)")
    args = parser.parse_args()
    if args.input == 'stdin':
        from sys import stdin as infile
    else:
        infile = open(args.input)
    if args.output == 'stdout':
        from sys import stdout as outfile
    else:
        outfile = open(args.output,'w')

    # compute linkage and output
    links = load(infile)
    emails = sorted(links.keys())
    for i in range(len(emails)-1):
        for j in range(i+1, len(emails)):
            if emails[j] in links[emails[i]]:
                outfile.write("%s\t%s\t%d\n" % (emails[i], emails[j], len(links[emails[i]][emails[j]])))
            else:
                outfile.write("%s\t%s\t0\n" % (emails[i], emails[j]))
